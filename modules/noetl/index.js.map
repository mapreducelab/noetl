{"version":3,"sources":["index.es6"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eA6CU,gB;;AAjCV,IAAI,KAAc,QAAQ,IAAR,CAAlB;IACI,QAAc,QAAQ,OAAR,CADlB;IAEI,KAAc,QAAQ,IAAR,CAFlB;IAGI,cAAc,QAAQ,eAAR,CAHlB;IAII,OAAc,QAAQ,QAAR,CAJlB;IAKI,OAAc,QAAQ,QAAR,CALlB;;AAQA,IAAI,qBAAJ;AACA,IAAI,yBAAJ;;;AAGA,IAAQ,UAAc,SAAtB;IACQ,WAAc,UADtB;IAEQ,QAAc,OAFtB;IAGQ,QAAc,OAHtB;IAIQ,OAAc,MAJtB,C;;;AAOA,MAAM,IAAN,GACK,GADL,GAEK,IAFL,CAEU,EAAE,MAAM,wCAAR,EAFV;;;AAKA,MAAM,QAAN,CAAe,CAAI,QAAJ,SAAgB,KAAhB,SAAyB,KAAzB,EAAoC,QAApC,SAAgD,KAAhD,SAAyD,IAAzD,CAAf;;;;;;;;;AASA,SAAU,gBAAV,CAA2B,IAA3B;AAAA,QAAgC,GAAhC,yDAAoC,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACU,IADV;;AAAA;AAAA,0BAEQ,CAAC,CAAC,MAAD,EAAS,IAAT,CAAc;AAAA,+BAAK,MAAM,KAAK,UAAhB;AAAA,qBAAd,CAAD,IAA8C,KAAK,WAF3D;AAAA;AAAA;AAAA;;AAAA,kDAGgB,iBAAiB,KAAK,IAAL,CAAU,GAAV,EAAc,QAAd,EAAuB,KAAvB,EAA6B,KAAK,WAAlC,CAAjB,CAHhB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAKC;;;AAGD,IAAI,mDAAY,iBAAiB,IAAI,IAAJ,CAAS,GAAT,EAAa,QAAb,EAAsB,KAAtB,EAA4B,OAA5B,CAAjB,EAAsD,GAAtD,CAAZ,EAAJ","file":"index.js","sourcesContent":["\"use strict\";\n\n// www.noetl.io ////////////////////////////////////////////////////////////////////////////////////////////////////////\n// www.noetl.io //////////////// NoETL /////////////////////////////////////////////////////////////////////////////////\n// www.noetl.io ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n/**\n * NoETL module dependencies\n */\n//require(\"babel-polyfill\");\n\nvar fs          = require('fs'),\n    nconf       = require('nconf'),\n    co          = require('co'),\n    ConfigEntry = require('./ConfigEntry'),\n    Task        = require('./Task'),\n    Step        = require('./Step');\n\n\nvar keys = Object.keys;\nvar assign = Object.assign;\n\n// Config keys\nconst   PROJECT     = 'PROJECT',\n        WORKFLOW    = 'WORKFLOW',\n        TASKS       = 'TASKS',\n        START       = 'start',\n        EXIT        = 'exit'; //SEP = [' ',':','.',',',';','|','-'];\n\n// Read configuration file\nnconf.argv()\n    .env()\n    .file({ file: '../../conf/coursor.inherit.cfg.v2.json' });\n\n// Validate config file for main entries\nnconf.required([`${WORKFLOW}:${TASKS}:${START}`,`${WORKFLOW}:${TASKS}:${EXIT}`]);\n\n/**\n * @function generateTaskList\n * Iterate over all tasks of workflow.\n * @returns { Iterator.<Task> }\n * @example\n * var tasks = [...generateTaskList(new Task('-',WORKFLOW,TASKS,'start'),'-')];\n */\nfunction* generateTaskList(task,sep='-'){\n    yield task;\n    if (!['exit'].find(x => x === task._entryPath) && task.nextSuccess) {\n        yield  *generateTaskList(Task.task(sep,WORKFLOW,TASKS,task.nextSuccess));\n    }\n};\n\n// Initiate a task list to push workflow\nvar tasks = [...generateTaskList(new Task('-',WORKFLOW,TASKS,'start'),'-')];\n\n\n//console.log(\"object: \",Object.keys(tasks[0].START).length);\n//console.log(\"VARTATSKS: \",tasks);\n//\n//var translatedEntry = ConfigEntry.translateConfigEntryReference({},tasks[1].STEPS.step1);\n//\n//console.log(\"translatedEntry\", translatedEntry);\n//\n//console.log(\"translatedEntry1\",translatedEntry.CALL.EXEC.CMD);\n\n\n//let tasks = Array.from(WorkflowTasks).\n\n\n"]}
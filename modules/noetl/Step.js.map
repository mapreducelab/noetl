{"version":3,"sources":["Step.es6"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAI,cAAc,QAAQ,eAAR,CAAlB;;;;;;AAMA,IAAQ,YAAiB,sBAAO,gBAAP,CAAzB;IACQ,SAAiB,sBAAO,YAAP,CADzB;IAEQ,UAAiB,sBAAO,aAAP,CAFzB;IAGQ,UAAiB,aAHzB,C;;;;;;;AAUA,OAAO,OAAP;AAAA;;AACI,oBAAc;AAAA;;AAAA,mHACD,SADC;;AAEV,cAAK,SAAL,IAAkB,mBAAlB;AACA,cAAK,MAAL,IAAkB,mBAAlB;AACA,cAAK,OAAL,IAAkB,GAAlB;AACA,cAAK,OAAL,IAAkB,SAAlB;AACC,YAAI,UAAU,CAAV,MAAiB,MAArB,EAA6B;AAC1B,kBAAK,IAAL,GAAY,EAAC,WAAU,sBAAc,EAAd,EAAiB,UAAU,CAAV,CAAjB,CAAX,EAAZ;AACH;;AARS;AAUb;;AAXL;AAAA;AAAA,sCAe6B;AAAA;;AAAA,8CAAV,QAAU;AAAV,wBAAU;AAAA;;AACrB,qBAAS,OAAT,CAAiB,UAAC,IAAD;AAAA,uBAAU,OAAK,SAAL,EAAgB,GAAhB,CAAoB,IAApB,CAAV;AAAA,aAAjB;AACH;AAjBL;AAAA;AAAA,mCAkBuB;AAAA;;AAAA,+CAAP,KAAO;AAAP,qBAAO;AAAA;;AACf,kBAAM,OAAN,CAAc,UAAC,IAAD;AAAA,uBAAU,OAAK,MAAL,EAAa,GAAb,CAAiB,IAAjB,CAAV;AAAA,aAAd;AACH;AApBL;AAAA;AAAA,kCAqBc,MArBd,EAqBsB;AACd,iBAAK,OAAL,IAAgB,MAAhB;AACH;AAvBL;AAAA;AAAA,sCAwBmB;AACX,mBAAO,KAAK,SAAL,KAAmB,SAA1B;AACH;AA1BL;AAAA;AAAA,mCA2BgB;AACR,mBAAO,KAAK,MAAL,KAAgB,SAAvB;AACH;AA7BL;AAAA;AAAA,oCA8BiB;AACT,mBAAO,KAAK,OAAL,KAAiB,SAAxB;AACH;AAhCL;AAAA;AAAA,kCAuCa;AACL,mBAAO,KAAK,IAAL,IAAa,SAApB;AACH;AAzCL;AAAA;AAAA,oCA0CgB;AACR,mBAAO,KAAK,MAAL,IAAe,SAAtB;AACH;AA5CL;AAAA;AAAA,oCA6CgB;AACR,mBAAO,KAAK,MAAL,IAAe,SAAtB;AACH;AA/CL;AAAA;AAAA,4BAiCuB;AACf,mBAAO,KAAK,IAAL,CAAU,OAAV,IAAqB,SAA5B;AACH;AAnCL;AAAA;AAAA,4BAoCuB;AACf,mBAAO,KAAK,IAAL,CAAU,OAAV,IAAqB,SAA5B;AACH;AAtCL;AAAA;AAAA,+BAYkB;AACV,sDAAW,IAAX,2CAAmB,SAAnB;AACH;AAdL;AAAA;AAAA,EAAoC,WAApC","file":"Step.js","sourcesContent":["\"use strict\";\nvar ConfigEntry = require('./ConfigEntry');\n\n// www.noetl.io ////////////////////////////////////////////////////////////////////////////////////////////////////////\n// www.noetl.io //////////////// NoETL Step class //////////////////////////////////////////////////////////////////////\n// www.noetl.io ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nconst   _ancestor      = Symbol(\"incoming steps\"),\n        _child         = Symbol(\"next steps\"),\n        _branch        = Symbol(\"branch name\"),\n        _status        = \"step status\"; // [READY||RUNNING||WAITING||FINISHED||FAILED]\n\n/**\n * @class Step\n * @classdesc Workflow Step's handler.\n * @extends ConfigEntry\n */\nmodule.exports = class Step extends ConfigEntry{\n    constructor() {\n        super(...arguments);\n        this[_ancestor] = new Set()\n        this[_child]    = new Set()\n        this[_branch]   = \"0\"\n        this[_status]   = undefined\n         if (arguments[0] === \"root\") {\n            this.NEXT = {\"SUCCESS\":Object.assign({},arguments[1])}\n        }\n\n    }\n    static step() {\n        return new Step(...arguments)\n    }\n    setAncestor(...ancestor) {\n        ancestor.forEach((item) => this[_ancestor].add(item))\n    }\n    setChild(...child) {\n        child.forEach((item) => this[_child].add(item))\n    }\n    setBranch(branch) {\n        this[_branch] = branch\n    }\n    getAncestor () {\n        return this[_ancestor] || undefined\n    }\n    getChild () {\n        return this[_child] || undefined\n    }\n    getBranch () {\n        return this[_branch] || undefined\n    }\n    get nextSuccess () {\n        return this.NEXT.SUCCESS || undefined\n    }\n    get nextFailure () {\n        return this.NEXT.FAILURE || undefined\n    }\n    getCall(){\n        return this.CALL || undefined\n    }\n    getCursor (){\n        return this.CURSOR || undefined\n    }\n    getAction (){\n        return this.ACTION || undefined\n    }\n\n};\n\n\n//export  {Step}"]}